Overview

This SQLite database (ProMo1database.db) consists of two primary tables:

    Shops: Stores shop details such as shop number, address, status, and partner information.
    Sales: Records sales transactions, including details like sales date, reference number, quantity sold, and value paid.

The database was designed to handle frequent updates, ensuring flexibility to reflect changes like opening/closing shops or modifying transaction data. Later, business requests led to further modifications.
Installation Guide for SQLite and DB Browser for SQLite
Step 1: Install SQLite

SQLite is a lightweight, serverless SQL database engine.

    Download SQLite: Visit the official SQLite Download Page. Download the version for your operating system.
    Extract Files: Extract the downloaded ZIP to a directory on your machine (e.g., C:\sqlite\ on Windows).
    Optional – Add SQLite to Path:
        On Windows, navigate to Control Panel → System → Advanced System Settings → Environment Variables, and edit the Path variable to include your SQLite directory.
        This allows you to run SQLite from any command prompt without specifying its full path.
    Verify Installation: Open a terminal and type:

    bash

    sqlite3

    You should see the SQLite prompt sqlite>.

Step 2: Install DB Browser for SQLite

DB Browser is a GUI tool for SQLite databases.

    Download DB Browser: Visit the DB Browser Download Page.
    Install the Tool: Follow the on-screen instructions to complete installation.
    Opening the Database: In DB Browser, go to File → Open Database and select ProMo1database.db to begin viewing or editing.

Original Table Descriptions (Before Business Change Request)

Shops Table (Before Business Change Request)

    Shop_Number: TEXT, NOT NULL, Unique identifier for each shop.
    Shop_Address: TEXT, NOT NULL, Address of the shop.
    Country_Name: TEXT, NOT NULL, Country where the shop is located.
    Shop_Name: TEXT, NOT NULL, Name of the shop.
    Status: TEXT, NOT NULL, Status of the shop (e.g., Open, Closed).
    Partner_Number: TEXT, NOT NULL, Partner number associated with the shop.
    Partner_Name: TEXT, NOT NULL, Partner name associated with the shop.

Sales Table (Before Business Change Request)

    Sales_Date: TEXT, NOT NULL, Date of the sales transaction.
    Shop_Number: TEXT, NOT NULL, Shop where the transaction occurred.
    Quantity: INTEGER, NOT NULL, Number of items sold.
    RefCol_Number: TEXT, NOT NULL, Reference number for the transaction.
    Transaction_ID: INTEGER, NOT NULL, Unique transaction identifier.

Business Change Request

    Addition of Open and Closed Date Columns:
        The Shops table was modified to include an Open_Date column (with a default value of 1970-01-01) to track when shops opened and a Closed_Date column (nullable) to track when shops closed.

    Enforcing Quantity of 1 in the Sales Table:
        Initially, the Quantity column allowed values greater than 1, but it was updated to enforce a default value of 1 for all sales. Each transaction now represents the sale of a single item. If multiple items are sold, they should be recorded as multiple rows.

    Adding Value_Paid Column to Sales Table:
        A new Value_Paid column was added to track the amount paid for each sale. The column does not allow a value of 0, but negative values are allowed to represent returns.

Final Table Descriptions (After Business Change Request)

Shops Table (After Business Change Request)

    Shop_Number: TEXT, NOT NULL, UNIQUE, Unique identifier for each shop.
    Shop_Address: TEXT, NOT NULL, Address of the shop.
    Country_Name: TEXT, NOT NULL, COLLATE NOCASE, Country where the shop is located.
    Shop_Name: TEXT, NOT NULL, UNIQUE, COLLATE NOCASE, Name of the shop.
    Status: TEXT, NOT NULL, DEFAULT 'Open', CHECK (Status IN ('Open', 'Closed', 'Going to Open')), Status of the shop.
    Partner_Number: TEXT, NOT NULL, Partner number associated with the shop.
    Partner_Name: TEXT, NOT NULL, Partner name associated with the shop.
    Open_Date: TEXT, NOT NULL, DEFAULT '1970-01-01', Date when the shop opened.
    Closed_Date: TEXT, NULL, Date when the shop closed (nullable).

Sales Table (After Business Change Request)

    Sales_Date: TEXT, NOT NULL, Date of the sales transaction.
    Shop_Number: TEXT, NOT NULL, Shop where the transaction occurred.
    Quantity: INTEGER, NOT NULL, DEFAULT 1, CHECK (Quantity = 1), Number of items sold (always 1).
    RefCol_Number: TEXT, NOT NULL, COLLATE BINARY, Reference number for the transaction.
    Transaction_ID: INTEGER, NOT NULL, UNIQUE, Unique transaction identifier.
    Value_Paid: INTEGER, NOT NULL, CHECK (Value_Paid != 0), Amount paid for the transaction (can be negative for returns).

Final SQL Queries
Table Creation Queries (Before Business Change Request)

sql

CREATE TABLE Shops (
    Shop_Number TEXT NOT NULL UNIQUE,
    Shop_Address TEXT NOT NULL,
    Country_Name TEXT NOT NULL COLLATE NOCASE,
    Shop_Name TEXT NOT NULL UNIQUE COLLATE NOCASE,
    Status TEXT NOT NULL DEFAULT 'Open',
    Partner_Number TEXT NOT NULL,
    Partner_Name TEXT NOT NULL
);

CREATE TABLE Sales (
    Sales_Date TEXT NOT NULL,
    Shop_Number TEXT NOT NULL,
    Quantity INTEGER NOT NULL DEFAULT 1,
    RefCol_Number TEXT NOT NULL COLLATE BINARY,
    Transaction_ID INTEGER NOT NULL UNIQUE
);

Alteration Queries (Business Change Request)

sql

-- Add Open_Date column with a default value for backward compatibility
ALTER TABLE Shops ADD COLUMN Open_Date TEXT NOT NULL DEFAULT '1970-01-01';

-- Add Closed_Date column (nullable)
ALTER TABLE Shops ADD COLUMN Closed_Date TEXT;

-- Add Value_Paid column with a check that prevents it from being 0
ALTER TABLE Sales ADD COLUMN Value_Paid INTEGER NOT NULL DEFAULT 1 CHECK (Value_Paid != 0);

Insert Queries for Shops and Sales (Final Working Queries)

sql

-- Insert new shops
INSERT INTO Shops (Shop_Number, Shop_Address, Country_Name, Shop_Name, Status, Partner_Number, Partner_Name, Open_Date)
VALUES ('235', 'New Address St', 'Germany', 'Berlin Center Mall', 'Open', '235', 'Fashion Partners', '2023-01-01');

INSERT INTO Shops (Shop_Number, Shop_Address, Country_Name, Shop_Name, Status, Partner_Number, Partner_Name, Open_Date, Closed_Date)
VALUES ('236', 'Old Address St', 'Germany', 'Old Town Mall', 'Closed', '236', 'Style Cloths', '2022-05-01', '2024-10-01');

-- Insert new sales
INSERT INTO Sales (Sales_Date, Shop_Number, Quantity, RefCol_Number, Value_Paid)
VALUES ('2024-10-13', 'S001', 1, 'REF123456', 89.99);

INSERT INTO Sales (Sales_Date, Shop_Number, Quantity, RefCol_Number, Value_Paid)
VALUES ('2024-10-13', 'S001', 1, 'REF123456', 32.99);

INSERT INTO Sales (Sales_Date, Shop_Number, Quantity, RefCol_Number, Value_Paid)
VALUES ('2024-10-13', 'S001', 1, 'REF123456', 18.95);
